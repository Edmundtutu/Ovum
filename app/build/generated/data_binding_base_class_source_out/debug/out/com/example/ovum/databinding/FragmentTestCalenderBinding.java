// Generated by view binder compiler. Do not edit!
package com.example.ovum.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ovum.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTestCalenderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final GridView calendarGridView;

  @NonNull
  public final TextView datetext;

  @NonNull
  public final GridView daysOfWeekGridView;

  @NonNull
  public final TextView estDueDate;

  @NonNull
  public final Spinner monthSpinner;

  @NonNull
  public final Spinner yearSpinner;

  private FragmentTestCalenderBinding(@NonNull LinearLayout rootView,
      @NonNull GridView calendarGridView, @NonNull TextView datetext,
      @NonNull GridView daysOfWeekGridView, @NonNull TextView estDueDate,
      @NonNull Spinner monthSpinner, @NonNull Spinner yearSpinner) {
    this.rootView = rootView;
    this.calendarGridView = calendarGridView;
    this.datetext = datetext;
    this.daysOfWeekGridView = daysOfWeekGridView;
    this.estDueDate = estDueDate;
    this.monthSpinner = monthSpinner;
    this.yearSpinner = yearSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTestCalenderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTestCalenderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_test_calender, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTestCalenderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarGridView;
      GridView calendarGridView = ViewBindings.findChildViewById(rootView, id);
      if (calendarGridView == null) {
        break missingId;
      }

      id = R.id.datetext;
      TextView datetext = ViewBindings.findChildViewById(rootView, id);
      if (datetext == null) {
        break missingId;
      }

      id = R.id.daysOfWeekGridView;
      GridView daysOfWeekGridView = ViewBindings.findChildViewById(rootView, id);
      if (daysOfWeekGridView == null) {
        break missingId;
      }

      id = R.id.estDueDate;
      TextView estDueDate = ViewBindings.findChildViewById(rootView, id);
      if (estDueDate == null) {
        break missingId;
      }

      id = R.id.monthSpinner;
      Spinner monthSpinner = ViewBindings.findChildViewById(rootView, id);
      if (monthSpinner == null) {
        break missingId;
      }

      id = R.id.yearSpinner;
      Spinner yearSpinner = ViewBindings.findChildViewById(rootView, id);
      if (yearSpinner == null) {
        break missingId;
      }

      return new FragmentTestCalenderBinding((LinearLayout) rootView, calendarGridView, datetext,
          daysOfWeekGridView, estDueDate, monthSpinner, yearSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
