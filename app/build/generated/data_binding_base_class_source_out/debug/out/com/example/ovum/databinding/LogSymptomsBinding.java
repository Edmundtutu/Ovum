// Generated by view binder compiler. Do not edit!
package com.example.ovum.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ovum.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LogSymptomsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView captionTextView1;

  @NonNull
  public final TextView captionTextView10;

  @NonNull
  public final TextView captionTextView11;

  @NonNull
  public final TextView captionTextView12;

  @NonNull
  public final TextView captionTextView13;

  @NonNull
  public final TextView captionTextView14;

  @NonNull
  public final TextView captionTextView15;

  @NonNull
  public final TextView captionTextView16;

  @NonNull
  public final TextView captionTextView17;

  @NonNull
  public final TextView captionTextView18;

  @NonNull
  public final TextView captionTextView19;

  @NonNull
  public final TextView captionTextView2;

  @NonNull
  public final TextView captionTextView20;

  @NonNull
  public final TextView captionTextView3;

  @NonNull
  public final TextView captionTextView4;

  @NonNull
  public final TextView captionTextView5;

  @NonNull
  public final TextView captionTextView6;

  @NonNull
  public final TextView captionTextView7;

  @NonNull
  public final TextView captionTextView8;

  @NonNull
  public final TextView captionTextView9;

  @NonNull
  public final Button confirmbtn;

  @NonNull
  public final RelativeLayout forAnger;

  @NonNull
  public final RelativeLayout forBrownSpotting;

  @NonNull
  public final RelativeLayout forLigtBrownSpotting;

  @NonNull
  public final RelativeLayout forMood;

  @NonNull
  public final RelativeLayout forRedSpotting;

  @NonNull
  public final RelativeLayout forStressed;

  @NonNull
  public final RelativeLayout forTiredness;

  @NonNull
  public final RelativeLayout forVerylight;

  @NonNull
  public final RelativeLayout forbloating;

  @NonNull
  public final RelativeLayout forheadache;

  @NonNull
  public final RelativeLayout forheavy;

  @NonNull
  public final RelativeLayout forhighAppetite;

  @NonNull
  public final RelativeLayout forlow;

  @NonNull
  public final RelativeLayout forlowAppetite;

  @NonNull
  public final RelativeLayout formedium;

  @NonNull
  public final RelativeLayout fornervours;

  @NonNull
  public final RelativeLayout forsleepy;

  @NonNull
  public final RelativeLayout forstomachPain;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final LinearLayout headingLog;

  @NonNull
  public final TextView headingLogTextView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView itVeryLight;

  @NonNull
  public final ImageView itheavy;

  @NonNull
  public final ImageView itlow;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final RelativeLayout test1;

  @NonNull
  public final RelativeLayout test2;

  private LogSymptomsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView captionTextView1,
      @NonNull TextView captionTextView10, @NonNull TextView captionTextView11,
      @NonNull TextView captionTextView12, @NonNull TextView captionTextView13,
      @NonNull TextView captionTextView14, @NonNull TextView captionTextView15,
      @NonNull TextView captionTextView16, @NonNull TextView captionTextView17,
      @NonNull TextView captionTextView18, @NonNull TextView captionTextView19,
      @NonNull TextView captionTextView2, @NonNull TextView captionTextView20,
      @NonNull TextView captionTextView3, @NonNull TextView captionTextView4,
      @NonNull TextView captionTextView5, @NonNull TextView captionTextView6,
      @NonNull TextView captionTextView7, @NonNull TextView captionTextView8,
      @NonNull TextView captionTextView9, @NonNull Button confirmbtn,
      @NonNull RelativeLayout forAnger, @NonNull RelativeLayout forBrownSpotting,
      @NonNull RelativeLayout forLigtBrownSpotting, @NonNull RelativeLayout forMood,
      @NonNull RelativeLayout forRedSpotting, @NonNull RelativeLayout forStressed,
      @NonNull RelativeLayout forTiredness, @NonNull RelativeLayout forVerylight,
      @NonNull RelativeLayout forbloating, @NonNull RelativeLayout forheadache,
      @NonNull RelativeLayout forheavy, @NonNull RelativeLayout forhighAppetite,
      @NonNull RelativeLayout forlow, @NonNull RelativeLayout forlowAppetite,
      @NonNull RelativeLayout formedium, @NonNull RelativeLayout fornervours,
      @NonNull RelativeLayout forsleepy, @NonNull RelativeLayout forstomachPain,
      @NonNull GridLayout gridLayout, @NonNull LinearLayout headingLog,
      @NonNull TextView headingLogTextView, @NonNull ImageView imageView,
      @NonNull ImageView imageView5, @NonNull ImageView itVeryLight, @NonNull ImageView itheavy,
      @NonNull ImageView itlow, @NonNull NestedScrollView scroll, @NonNull RelativeLayout test1,
      @NonNull RelativeLayout test2) {
    this.rootView = rootView;
    this.captionTextView1 = captionTextView1;
    this.captionTextView10 = captionTextView10;
    this.captionTextView11 = captionTextView11;
    this.captionTextView12 = captionTextView12;
    this.captionTextView13 = captionTextView13;
    this.captionTextView14 = captionTextView14;
    this.captionTextView15 = captionTextView15;
    this.captionTextView16 = captionTextView16;
    this.captionTextView17 = captionTextView17;
    this.captionTextView18 = captionTextView18;
    this.captionTextView19 = captionTextView19;
    this.captionTextView2 = captionTextView2;
    this.captionTextView20 = captionTextView20;
    this.captionTextView3 = captionTextView3;
    this.captionTextView4 = captionTextView4;
    this.captionTextView5 = captionTextView5;
    this.captionTextView6 = captionTextView6;
    this.captionTextView7 = captionTextView7;
    this.captionTextView8 = captionTextView8;
    this.captionTextView9 = captionTextView9;
    this.confirmbtn = confirmbtn;
    this.forAnger = forAnger;
    this.forBrownSpotting = forBrownSpotting;
    this.forLigtBrownSpotting = forLigtBrownSpotting;
    this.forMood = forMood;
    this.forRedSpotting = forRedSpotting;
    this.forStressed = forStressed;
    this.forTiredness = forTiredness;
    this.forVerylight = forVerylight;
    this.forbloating = forbloating;
    this.forheadache = forheadache;
    this.forheavy = forheavy;
    this.forhighAppetite = forhighAppetite;
    this.forlow = forlow;
    this.forlowAppetite = forlowAppetite;
    this.formedium = formedium;
    this.fornervours = fornervours;
    this.forsleepy = forsleepy;
    this.forstomachPain = forstomachPain;
    this.gridLayout = gridLayout;
    this.headingLog = headingLog;
    this.headingLogTextView = headingLogTextView;
    this.imageView = imageView;
    this.imageView5 = imageView5;
    this.itVeryLight = itVeryLight;
    this.itheavy = itheavy;
    this.itlow = itlow;
    this.scroll = scroll;
    this.test1 = test1;
    this.test2 = test2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LogSymptomsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LogSymptomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.log_symptoms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LogSymptomsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caption_text_view1;
      TextView captionTextView1 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView1 == null) {
        break missingId;
      }

      id = R.id.caption_text_view10;
      TextView captionTextView10 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView10 == null) {
        break missingId;
      }

      id = R.id.caption_text_view11;
      TextView captionTextView11 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView11 == null) {
        break missingId;
      }

      id = R.id.caption_text_view12;
      TextView captionTextView12 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView12 == null) {
        break missingId;
      }

      id = R.id.caption_text_view13;
      TextView captionTextView13 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView13 == null) {
        break missingId;
      }

      id = R.id.caption_text_view14;
      TextView captionTextView14 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView14 == null) {
        break missingId;
      }

      id = R.id.caption_text_view15;
      TextView captionTextView15 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView15 == null) {
        break missingId;
      }

      id = R.id.caption_text_view16;
      TextView captionTextView16 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView16 == null) {
        break missingId;
      }

      id = R.id.caption_text_view17;
      TextView captionTextView17 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView17 == null) {
        break missingId;
      }

      id = R.id.caption_text_view18;
      TextView captionTextView18 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView18 == null) {
        break missingId;
      }

      id = R.id.caption_text_view19;
      TextView captionTextView19 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView19 == null) {
        break missingId;
      }

      id = R.id.caption_text_view2;
      TextView captionTextView2 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView2 == null) {
        break missingId;
      }

      id = R.id.caption_text_view20;
      TextView captionTextView20 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView20 == null) {
        break missingId;
      }

      id = R.id.caption_text_view3;
      TextView captionTextView3 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView3 == null) {
        break missingId;
      }

      id = R.id.caption_text_view4;
      TextView captionTextView4 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView4 == null) {
        break missingId;
      }

      id = R.id.caption_text_view5;
      TextView captionTextView5 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView5 == null) {
        break missingId;
      }

      id = R.id.caption_text_view6;
      TextView captionTextView6 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView6 == null) {
        break missingId;
      }

      id = R.id.caption_text_view7;
      TextView captionTextView7 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView7 == null) {
        break missingId;
      }

      id = R.id.caption_text_view8;
      TextView captionTextView8 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView8 == null) {
        break missingId;
      }

      id = R.id.caption_text_view9;
      TextView captionTextView9 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView9 == null) {
        break missingId;
      }

      id = R.id.confirmbtn;
      Button confirmbtn = ViewBindings.findChildViewById(rootView, id);
      if (confirmbtn == null) {
        break missingId;
      }

      id = R.id.forAnger;
      RelativeLayout forAnger = ViewBindings.findChildViewById(rootView, id);
      if (forAnger == null) {
        break missingId;
      }

      id = R.id.forBrownSpotting;
      RelativeLayout forBrownSpotting = ViewBindings.findChildViewById(rootView, id);
      if (forBrownSpotting == null) {
        break missingId;
      }

      id = R.id.forLigtBrownSpotting;
      RelativeLayout forLigtBrownSpotting = ViewBindings.findChildViewById(rootView, id);
      if (forLigtBrownSpotting == null) {
        break missingId;
      }

      id = R.id.forMood;
      RelativeLayout forMood = ViewBindings.findChildViewById(rootView, id);
      if (forMood == null) {
        break missingId;
      }

      id = R.id.forRedSpotting;
      RelativeLayout forRedSpotting = ViewBindings.findChildViewById(rootView, id);
      if (forRedSpotting == null) {
        break missingId;
      }

      id = R.id.forStressed;
      RelativeLayout forStressed = ViewBindings.findChildViewById(rootView, id);
      if (forStressed == null) {
        break missingId;
      }

      id = R.id.forTiredness;
      RelativeLayout forTiredness = ViewBindings.findChildViewById(rootView, id);
      if (forTiredness == null) {
        break missingId;
      }

      id = R.id.forVerylight;
      RelativeLayout forVerylight = ViewBindings.findChildViewById(rootView, id);
      if (forVerylight == null) {
        break missingId;
      }

      id = R.id.forbloating;
      RelativeLayout forbloating = ViewBindings.findChildViewById(rootView, id);
      if (forbloating == null) {
        break missingId;
      }

      id = R.id.forheadache;
      RelativeLayout forheadache = ViewBindings.findChildViewById(rootView, id);
      if (forheadache == null) {
        break missingId;
      }

      id = R.id.forheavy;
      RelativeLayout forheavy = ViewBindings.findChildViewById(rootView, id);
      if (forheavy == null) {
        break missingId;
      }

      id = R.id.forhighAppetite;
      RelativeLayout forhighAppetite = ViewBindings.findChildViewById(rootView, id);
      if (forhighAppetite == null) {
        break missingId;
      }

      id = R.id.forlow;
      RelativeLayout forlow = ViewBindings.findChildViewById(rootView, id);
      if (forlow == null) {
        break missingId;
      }

      id = R.id.forlowAppetite;
      RelativeLayout forlowAppetite = ViewBindings.findChildViewById(rootView, id);
      if (forlowAppetite == null) {
        break missingId;
      }

      id = R.id.formedium;
      RelativeLayout formedium = ViewBindings.findChildViewById(rootView, id);
      if (formedium == null) {
        break missingId;
      }

      id = R.id.fornervours;
      RelativeLayout fornervours = ViewBindings.findChildViewById(rootView, id);
      if (fornervours == null) {
        break missingId;
      }

      id = R.id.forsleepy;
      RelativeLayout forsleepy = ViewBindings.findChildViewById(rootView, id);
      if (forsleepy == null) {
        break missingId;
      }

      id = R.id.forstomachPain;
      RelativeLayout forstomachPain = ViewBindings.findChildViewById(rootView, id);
      if (forstomachPain == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.heading_log;
      LinearLayout headingLog = ViewBindings.findChildViewById(rootView, id);
      if (headingLog == null) {
        break missingId;
      }

      id = R.id.heading_log_text_view;
      TextView headingLogTextView = ViewBindings.findChildViewById(rootView, id);
      if (headingLogTextView == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.itVeryLight;
      ImageView itVeryLight = ViewBindings.findChildViewById(rootView, id);
      if (itVeryLight == null) {
        break missingId;
      }

      id = R.id.itheavy;
      ImageView itheavy = ViewBindings.findChildViewById(rootView, id);
      if (itheavy == null) {
        break missingId;
      }

      id = R.id.itlow;
      ImageView itlow = ViewBindings.findChildViewById(rootView, id);
      if (itlow == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.test1;
      RelativeLayout test1 = ViewBindings.findChildViewById(rootView, id);
      if (test1 == null) {
        break missingId;
      }

      id = R.id.test2;
      RelativeLayout test2 = ViewBindings.findChildViewById(rootView, id);
      if (test2 == null) {
        break missingId;
      }

      return new LogSymptomsBinding((ConstraintLayout) rootView, captionTextView1,
          captionTextView10, captionTextView11, captionTextView12, captionTextView13,
          captionTextView14, captionTextView15, captionTextView16, captionTextView17,
          captionTextView18, captionTextView19, captionTextView2, captionTextView20,
          captionTextView3, captionTextView4, captionTextView5, captionTextView6, captionTextView7,
          captionTextView8, captionTextView9, confirmbtn, forAnger, forBrownSpotting,
          forLigtBrownSpotting, forMood, forRedSpotting, forStressed, forTiredness, forVerylight,
          forbloating, forheadache, forheavy, forhighAppetite, forlow, forlowAppetite, formedium,
          fornervours, forsleepy, forstomachPain, gridLayout, headingLog, headingLogTextView,
          imageView, imageView5, itVeryLight, itheavy, itlow, scroll, test1, test2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
