// Generated by view binder compiler. Do not edit!
package com.example.ovum.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ovum.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogSymptomsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout apathetic;

  @NonNull
  public final LinearLayout bloating;

  @NonNull
  public final RelativeLayout bottomSpace2;

  @NonNull
  public final TextView captionTextView10;

  @NonNull
  public final TextView captionTextView11;

  @NonNull
  public final TextView captionTextView12;

  @NonNull
  public final TextView captionTextView13;

  @NonNull
  public final TextView captionTextView3;

  @NonNull
  public final TextView captionTextView6;

  @NonNull
  public final TextView captionTextView7;

  @NonNull
  public final TextView captionTextView8;

  @NonNull
  public final TextView captionTextView9;

  @NonNull
  public final Button confirmbtn;

  @NonNull
  public final RelativeLayout forTiredness;

  @NonNull
  public final RelativeLayout forapathetic;

  @NonNull
  public final RelativeLayout forbloating;

  @NonNull
  public final RelativeLayout forheadache;

  @NonNull
  public final RelativeLayout forheavy;

  @NonNull
  public final RelativeLayout forhighAppetite;

  @NonNull
  public final RelativeLayout forlow;

  @NonNull
  public final RelativeLayout forlowAppetite;

  @NonNull
  public final RelativeLayout formedium;

  @NonNull
  public final RelativeLayout fornervours;

  @NonNull
  public final RelativeLayout forsleepy;

  @NonNull
  public final RelativeLayout forstomachPain;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final LinearLayout headache;

  @NonNull
  public final LinearLayout heavy;

  @NonNull
  public final LinearLayout highAppetite;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView itheavy;

  @NonNull
  public final ImageView itlow;

  @NonNull
  public final LinearLayout low;

  @NonNull
  public final LinearLayout lowAppetite;

  @NonNull
  public final LinearLayout medium;

  @NonNull
  public final LinearLayout nervous;

  @NonNull
  public final NestedScrollView scroll;

  @NonNull
  public final LinearLayout sleepy;

  @NonNull
  public final LinearLayout stomachPain;

  @NonNull
  public final TextView textView;

  @NonNull
  public final LinearLayout tiredness;

  @NonNull
  public final LinearLayout title;

  @NonNull
  public final TextView txtCreate;

  private ActivityLogSymptomsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout apathetic, @NonNull LinearLayout bloating,
      @NonNull RelativeLayout bottomSpace2, @NonNull TextView captionTextView10,
      @NonNull TextView captionTextView11, @NonNull TextView captionTextView12,
      @NonNull TextView captionTextView13, @NonNull TextView captionTextView3,
      @NonNull TextView captionTextView6, @NonNull TextView captionTextView7,
      @NonNull TextView captionTextView8, @NonNull TextView captionTextView9,
      @NonNull Button confirmbtn, @NonNull RelativeLayout forTiredness,
      @NonNull RelativeLayout forapathetic, @NonNull RelativeLayout forbloating,
      @NonNull RelativeLayout forheadache, @NonNull RelativeLayout forheavy,
      @NonNull RelativeLayout forhighAppetite, @NonNull RelativeLayout forlow,
      @NonNull RelativeLayout forlowAppetite, @NonNull RelativeLayout formedium,
      @NonNull RelativeLayout fornervours, @NonNull RelativeLayout forsleepy,
      @NonNull RelativeLayout forstomachPain, @NonNull GridLayout gridLayout,
      @NonNull LinearLayout headache, @NonNull LinearLayout heavy,
      @NonNull LinearLayout highAppetite, @NonNull ImageView imageView5, @NonNull ImageView itheavy,
      @NonNull ImageView itlow, @NonNull LinearLayout low, @NonNull LinearLayout lowAppetite,
      @NonNull LinearLayout medium, @NonNull LinearLayout nervous, @NonNull NestedScrollView scroll,
      @NonNull LinearLayout sleepy, @NonNull LinearLayout stomachPain, @NonNull TextView textView,
      @NonNull LinearLayout tiredness, @NonNull LinearLayout title, @NonNull TextView txtCreate) {
    this.rootView = rootView;
    this.apathetic = apathetic;
    this.bloating = bloating;
    this.bottomSpace2 = bottomSpace2;
    this.captionTextView10 = captionTextView10;
    this.captionTextView11 = captionTextView11;
    this.captionTextView12 = captionTextView12;
    this.captionTextView13 = captionTextView13;
    this.captionTextView3 = captionTextView3;
    this.captionTextView6 = captionTextView6;
    this.captionTextView7 = captionTextView7;
    this.captionTextView8 = captionTextView8;
    this.captionTextView9 = captionTextView9;
    this.confirmbtn = confirmbtn;
    this.forTiredness = forTiredness;
    this.forapathetic = forapathetic;
    this.forbloating = forbloating;
    this.forheadache = forheadache;
    this.forheavy = forheavy;
    this.forhighAppetite = forhighAppetite;
    this.forlow = forlow;
    this.forlowAppetite = forlowAppetite;
    this.formedium = formedium;
    this.fornervours = fornervours;
    this.forsleepy = forsleepy;
    this.forstomachPain = forstomachPain;
    this.gridLayout = gridLayout;
    this.headache = headache;
    this.heavy = heavy;
    this.highAppetite = highAppetite;
    this.imageView5 = imageView5;
    this.itheavy = itheavy;
    this.itlow = itlow;
    this.low = low;
    this.lowAppetite = lowAppetite;
    this.medium = medium;
    this.nervous = nervous;
    this.scroll = scroll;
    this.sleepy = sleepy;
    this.stomachPain = stomachPain;
    this.textView = textView;
    this.tiredness = tiredness;
    this.title = title;
    this.txtCreate = txtCreate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogSymptomsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogSymptomsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_symptoms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogSymptomsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apathetic;
      LinearLayout apathetic = ViewBindings.findChildViewById(rootView, id);
      if (apathetic == null) {
        break missingId;
      }

      id = R.id.bloating;
      LinearLayout bloating = ViewBindings.findChildViewById(rootView, id);
      if (bloating == null) {
        break missingId;
      }

      id = R.id.bottomSpace2;
      RelativeLayout bottomSpace2 = ViewBindings.findChildViewById(rootView, id);
      if (bottomSpace2 == null) {
        break missingId;
      }

      id = R.id.caption_text_view10;
      TextView captionTextView10 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView10 == null) {
        break missingId;
      }

      id = R.id.caption_text_view11;
      TextView captionTextView11 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView11 == null) {
        break missingId;
      }

      id = R.id.caption_text_view12;
      TextView captionTextView12 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView12 == null) {
        break missingId;
      }

      id = R.id.caption_text_view13;
      TextView captionTextView13 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView13 == null) {
        break missingId;
      }

      id = R.id.caption_text_view3;
      TextView captionTextView3 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView3 == null) {
        break missingId;
      }

      id = R.id.caption_text_view6;
      TextView captionTextView6 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView6 == null) {
        break missingId;
      }

      id = R.id.caption_text_view7;
      TextView captionTextView7 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView7 == null) {
        break missingId;
      }

      id = R.id.caption_text_view8;
      TextView captionTextView8 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView8 == null) {
        break missingId;
      }

      id = R.id.caption_text_view9;
      TextView captionTextView9 = ViewBindings.findChildViewById(rootView, id);
      if (captionTextView9 == null) {
        break missingId;
      }

      id = R.id.confirmbtn;
      Button confirmbtn = ViewBindings.findChildViewById(rootView, id);
      if (confirmbtn == null) {
        break missingId;
      }

      id = R.id.forTiredness;
      RelativeLayout forTiredness = ViewBindings.findChildViewById(rootView, id);
      if (forTiredness == null) {
        break missingId;
      }

      id = R.id.forapathetic;
      RelativeLayout forapathetic = ViewBindings.findChildViewById(rootView, id);
      if (forapathetic == null) {
        break missingId;
      }

      id = R.id.forbloating;
      RelativeLayout forbloating = ViewBindings.findChildViewById(rootView, id);
      if (forbloating == null) {
        break missingId;
      }

      id = R.id.forheadache;
      RelativeLayout forheadache = ViewBindings.findChildViewById(rootView, id);
      if (forheadache == null) {
        break missingId;
      }

      id = R.id.forheavy;
      RelativeLayout forheavy = ViewBindings.findChildViewById(rootView, id);
      if (forheavy == null) {
        break missingId;
      }

      id = R.id.forhighAppetite;
      RelativeLayout forhighAppetite = ViewBindings.findChildViewById(rootView, id);
      if (forhighAppetite == null) {
        break missingId;
      }

      id = R.id.forlow;
      RelativeLayout forlow = ViewBindings.findChildViewById(rootView, id);
      if (forlow == null) {
        break missingId;
      }

      id = R.id.forlowAppetite;
      RelativeLayout forlowAppetite = ViewBindings.findChildViewById(rootView, id);
      if (forlowAppetite == null) {
        break missingId;
      }

      id = R.id.formedium;
      RelativeLayout formedium = ViewBindings.findChildViewById(rootView, id);
      if (formedium == null) {
        break missingId;
      }

      id = R.id.fornervours;
      RelativeLayout fornervours = ViewBindings.findChildViewById(rootView, id);
      if (fornervours == null) {
        break missingId;
      }

      id = R.id.forsleepy;
      RelativeLayout forsleepy = ViewBindings.findChildViewById(rootView, id);
      if (forsleepy == null) {
        break missingId;
      }

      id = R.id.forstomachPain;
      RelativeLayout forstomachPain = ViewBindings.findChildViewById(rootView, id);
      if (forstomachPain == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.headache;
      LinearLayout headache = ViewBindings.findChildViewById(rootView, id);
      if (headache == null) {
        break missingId;
      }

      id = R.id.heavy;
      LinearLayout heavy = ViewBindings.findChildViewById(rootView, id);
      if (heavy == null) {
        break missingId;
      }

      id = R.id.highAppetite;
      LinearLayout highAppetite = ViewBindings.findChildViewById(rootView, id);
      if (highAppetite == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.itheavy;
      ImageView itheavy = ViewBindings.findChildViewById(rootView, id);
      if (itheavy == null) {
        break missingId;
      }

      id = R.id.itlow;
      ImageView itlow = ViewBindings.findChildViewById(rootView, id);
      if (itlow == null) {
        break missingId;
      }

      id = R.id.low;
      LinearLayout low = ViewBindings.findChildViewById(rootView, id);
      if (low == null) {
        break missingId;
      }

      id = R.id.lowAppetite;
      LinearLayout lowAppetite = ViewBindings.findChildViewById(rootView, id);
      if (lowAppetite == null) {
        break missingId;
      }

      id = R.id.medium;
      LinearLayout medium = ViewBindings.findChildViewById(rootView, id);
      if (medium == null) {
        break missingId;
      }

      id = R.id.nervous;
      LinearLayout nervous = ViewBindings.findChildViewById(rootView, id);
      if (nervous == null) {
        break missingId;
      }

      id = R.id.scroll;
      NestedScrollView scroll = ViewBindings.findChildViewById(rootView, id);
      if (scroll == null) {
        break missingId;
      }

      id = R.id.sleepy;
      LinearLayout sleepy = ViewBindings.findChildViewById(rootView, id);
      if (sleepy == null) {
        break missingId;
      }

      id = R.id.stomachPain;
      LinearLayout stomachPain = ViewBindings.findChildViewById(rootView, id);
      if (stomachPain == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.tiredness;
      LinearLayout tiredness = ViewBindings.findChildViewById(rootView, id);
      if (tiredness == null) {
        break missingId;
      }

      id = R.id.title;
      LinearLayout title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.txtCreate;
      TextView txtCreate = ViewBindings.findChildViewById(rootView, id);
      if (txtCreate == null) {
        break missingId;
      }

      return new ActivityLogSymptomsBinding((ConstraintLayout) rootView, apathetic, bloating,
          bottomSpace2, captionTextView10, captionTextView11, captionTextView12, captionTextView13,
          captionTextView3, captionTextView6, captionTextView7, captionTextView8, captionTextView9,
          confirmbtn, forTiredness, forapathetic, forbloating, forheadache, forheavy,
          forhighAppetite, forlow, forlowAppetite, formedium, fornervours, forsleepy,
          forstomachPain, gridLayout, headache, heavy, highAppetite, imageView5, itheavy, itlow,
          low, lowAppetite, medium, nervous, scroll, sleepy, stomachPain, textView, tiredness,
          title, txtCreate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
